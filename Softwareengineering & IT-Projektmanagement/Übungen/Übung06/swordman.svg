<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="770px" height="501px" viewBox="-0.5 -0.5 770 501" content="&lt;mxfile host=&quot;app.diagrams.net&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36&quot; version=&quot;25.0.3&quot;&gt;&#10;  &lt;diagram id=&quot;RVJHPZWQsxC-OZV-lrWp&quot; name=&quot;Page-1&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;2074&quot; dy=&quot;1134&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;850&quot; pageHeight=&quot;1100&quot; background=&quot;#ffffff&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;30&quot; value=&quot;AbstractSwordman {abstract}&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;strokeColor=#000000;fontColor=#000000;fillColor=#FFFFFF;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;300&quot; y=&quot;70&quot; width=&quot;240&quot; height=&quot;134&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;31&quot; value=&quot;health_points:int&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#000000;&quot; parent=&quot;30&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;240&quot; height=&quot;24&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;56&quot; value=&quot;damage_per_second:int&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#000000;&quot; parent=&quot;30&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;50&quot; width=&quot;240&quot; height=&quot;24&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;32&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontColor=#000000;&quot; parent=&quot;30&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;74&quot; width=&quot;240&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;33&quot; value=&quot;moveToPosition(int x, int y): void {abstract}&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#000000;&quot; parent=&quot;30&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;82&quot; width=&quot;240&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;57&quot; value=&quot;attack(): void {abstract}&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#000000;&quot; parent=&quot;30&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;108&quot; width=&quot;240&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;65&quot; value=&quot;&quot; style=&quot;edgeStyle=none;html=1;strokeColor=#050505;strokeWidth=2;endArrow=block;endFill=0;endSize=12;&quot; parent=&quot;1&quot; source=&quot;58&quot; target=&quot;57&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;58&quot; value=&quot;BasicSwordman&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;strokeColor=#000000;fontColor=#000000;fillColor=#FFFFFF;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;325&quot; y=&quot;280&quot; width=&quot;190&quot; height=&quot;138&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;61&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontColor=#000000;&quot; parent=&quot;58&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;190&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;62&quot; value=&quot;moveToPosition(int x, int y): void&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#000000;&quot; parent=&quot;58&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;34&quot; width=&quot;190&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;63&quot; value=&quot;attack(): void&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#000000;&quot; parent=&quot;58&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;60&quot; width=&quot;190&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;uuwrjBlVwj8bdZF92xEL-65&quot; value=&quot;changeDamage(int): void&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#000000;&quot; vertex=&quot;1&quot; parent=&quot;58&quot;&gt;&#10;          &lt;mxGeometry y=&quot;86&quot; width=&quot;190&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;uuwrjBlVwj8bdZF92xEL-66&quot; value=&quot;changeMaxHealth(int): void&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#000000;&quot; vertex=&quot;1&quot; parent=&quot;58&quot;&gt;&#10;          &lt;mxGeometry y=&quot;112&quot; width=&quot;190&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;uuwrjBlVwj8bdZF92xEL-67&quot; value=&quot;1. Welches in der Vorlesung vorgestellt Entwurfsmuster bietet eine gute Lösung für das beschriebene Problem?&amp;lt;br&amp;gt;&amp;lt;div style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;Das Klassendiagramm eignet sich am besten, weil Im Rahmen der Implementierung nicht die Kommunikation, sondern vor allem die Relation&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;und Vererbung, bzw. Veränderung der eigenen Attribute im Vordergrund steht.&amp;lt;/div&amp;gt;&quot; style=&quot;text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;40&quot; y=&quot;440&quot; width=&quot;770&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;uuwrjBlVwj8bdZF92xEL-68&quot; value=&quot;3. Weitere Fähigkeiten:&amp;lt;br&amp;gt;&amp;lt;div&amp;gt;healSwordman(Swordman): anderen Spieler heilen (zeitlich begrenzt, eigene HP übertragen)&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;rage(): kurzzeitige Schadenserhöhung&amp;lt;/div&amp;gt;&quot; style=&quot;text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;40&quot; y=&quot;510&quot; width=&quot;520&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;" resource="https://app.diagrams.net/#HR4Tobi%2FCV-Semester-3%2Fmain%2FSoftwareengineering%20%26%20IT-Projektmanagement%2F%C3%9Cbungen%2F%C3%9Cbung06%2Fswordman.svg#%7B%22pageId%22%3A%22RVJHPZWQsxC-OZV-lrWp%22%7D" style="background-color: rgb(255, 255, 255);"><defs><clipPath id="mx-clip-264-31-232-24-0"><rect x="264" y="31" width="232" height="24"/></clipPath><clipPath id="mx-clip-264-55-232-24-0"><rect x="264" y="55" width="232" height="24"/></clipPath><clipPath id="mx-clip-264-87-232-26-0"><rect x="264" y="87" width="232" height="26"/></clipPath><clipPath id="mx-clip-264-113-232-26-0"><rect x="264" y="113" width="232" height="26"/></clipPath><clipPath id="mx-clip-289-249-182-26-0"><rect x="289" y="249" width="182" height="26"/></clipPath><clipPath id="mx-clip-289-275-182-26-0"><rect x="289" y="275" width="182" height="26"/></clipPath><clipPath id="mx-clip-289-301-182-26-0"><rect x="289" y="301" width="182" height="26"/></clipPath><clipPath id="mx-clip-289-327-182-26-0"><rect x="289" y="327" width="182" height="26"/></clipPath></defs><rect fill="#ffffff" width="100%" height="100%" x="0" y="0"/><g><g data-cell-id="0"><g data-cell-id="1"><g data-cell-id="30"><g><path d="M 260 26 L 260 0 L 500 0 L 500 26" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 260 26 L 260 134 L 500 134 L 500 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 260 26 L 500 26" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/></g><g><g fill="#000000" font-family="&quot;Helvetica&quot;" font-weight="bold" text-anchor="middle" font-size="12px"><text x="379.5" y="17.5">AbstractSwordman {abstract}</text></g></g><g data-cell-id="31"><g><rect x="260" y="26" width="240" height="24" fill="none" stroke="none" pointer-events="all"/></g><g><g fill="#000000" font-family="&quot;Helvetica&quot;" clip-path="url(#mx-clip-264-31-232-24-0)" font-size="12px"><text x="265.5" y="43.5">health_points:int</text></g></g></g><g data-cell-id="56"><g><rect x="260" y="50" width="240" height="24" fill="none" stroke="none" pointer-events="all"/></g><g><g fill="#000000" font-family="&quot;Helvetica&quot;" clip-path="url(#mx-clip-264-55-232-24-0)" font-size="12px"><text x="265.5" y="67.5">damage_per_second:int</text></g></g></g><g data-cell-id="32"><g><path d="M 260 78 L 500 78" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="33"><g><rect x="260" y="82" width="240" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g fill="#000000" font-family="&quot;Helvetica&quot;" clip-path="url(#mx-clip-264-87-232-26-0)" font-size="12px"><text x="265.5" y="99.5">moveToPosition(int x, int y): void {abstract}</text></g></g></g><g data-cell-id="57"><g><rect x="260" y="108" width="240" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g fill="#000000" font-family="&quot;Helvetica&quot;" clip-path="url(#mx-clip-264-113-232-26-0)" font-size="12px"><text x="265.5" y="125.5">attack(): void {abstract}</text></g></g></g></g><g data-cell-id="65"><g><path d="M 380 210 L 380 150.24" fill="none" stroke="#050505" stroke-width="2" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 380 136.24 L 387 150.24 L 373 150.24 Z" fill="none" stroke="#050505" stroke-width="2" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="58"><g><path d="M 285 236 L 285 210 L 475 210 L 475 236" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 285 236 L 285 348 L 475 348 L 475 236" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 285 236 L 475 236" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/></g><g><g fill="#000000" font-family="&quot;Helvetica&quot;" font-weight="bold" text-anchor="middle" font-size="12px"><text x="379.5" y="227.5">BasicSwordman</text></g></g><g data-cell-id="61"><g><path d="M 285 240 L 475 240" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="62"><g><rect x="285" y="244" width="190" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g fill="#000000" font-family="&quot;Helvetica&quot;" clip-path="url(#mx-clip-289-249-182-26-0)" font-size="12px"><text x="290.5" y="261.5">moveToPosition(int x, int y): void</text></g></g></g><g data-cell-id="63"><g><rect x="285" y="270" width="190" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g fill="#000000" font-family="&quot;Helvetica&quot;" clip-path="url(#mx-clip-289-275-182-26-0)" font-size="12px"><text x="290.5" y="287.5">attack(): void</text></g></g></g><g data-cell-id="uuwrjBlVwj8bdZF92xEL-65"><g><rect x="285" y="296" width="190" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g fill="#000000" font-family="&quot;Helvetica&quot;" clip-path="url(#mx-clip-289-301-182-26-0)" font-size="12px"><text x="290.5" y="313.5">changeDamage(int): void</text></g></g></g><g data-cell-id="uuwrjBlVwj8bdZF92xEL-66"><g><rect x="285" y="322" width="190" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g fill="#000000" font-family="&quot;Helvetica&quot;" clip-path="url(#mx-clip-289-327-182-26-0)" font-size="12px"><text x="290.5" y="339.5">changeMaxHealth(int): void</text></g></g></g></g><g data-cell-id="uuwrjBlVwj8bdZF92xEL-67"><g><rect x="0" y="370" width="770" height="60" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 400px; margin-left: 2px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">1. Welches in der Vorlesung vorgestellt Entwurfsmuster bietet eine gute Lösung für das beschriebene Problem?<br /><div style=""><span style="background-color: initial;">Das Klassendiagramm eignet sich am besten, weil Im Rahmen der Implementierung nicht die Kommunikation, sondern vor allem die Relation</span></div><div>und Vererbung, bzw. Veränderung der eigenen Attribute im Vordergrund steht.</div></div></div></div></foreignObject><text x="2" y="404" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px">1. Welches in der Vorlesung vorgestellt Entwurfsmuster bietet eine gute Lösung für das beschriebene Problem?...</text></switch></g></g></g><g data-cell-id="uuwrjBlVwj8bdZF92xEL-68"><g><rect x="0" y="440" width="520" height="60" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 470px; margin-left: 2px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">3. Weitere Fähigkeiten:<br /><div>healSwordman(Swordman): anderen Spieler heilen (zeitlich begrenzt, eigene HP übertragen)</div><div>rage(): kurzzeitige Schadenserhöhung</div></div></div></div></foreignObject><text x="2" y="474" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px">3. Weitere Fähigkeiten:...</text></switch></g></g></g></g></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>